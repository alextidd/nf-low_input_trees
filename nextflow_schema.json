{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/nf-core/chemotrees/master/nextflow_schema.json",
  "title": "nf-core/chemotrees pipeline parameters",
  "description": "Use Sequoia to construct phylogenetic trees for blood-derived single cell colonies pre- and post-chemo",
  "type": "object",
  "$defs": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["sample_sheet", "sequencing_type", "outdir"],
      "properties": {
        "sample_sheet": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_sample_sheet.json",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Path to comma-separated file containing metadata and file paths the samples in the experiment.",
          "help_text": "You will need to create a file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/chemotrees/usage#samplesheet-input).",
          "fa_icon": "fas fa-file-csv"
        },
        "sequencing_type": {
          "type": "string",
          "description": "The type of sequencing done in the project. Must be one of \"WGS\" (whole genome sequencing) or \"WES\" (whole exome sequencing). Default is WGS.",
          "enum": ["WGS", "WES"]
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved.",
          "fa_icon": "fas fa-folder-open"
        },
        "email": {
          "type": "string",
          "description": "Email address for completion summary.",
          "fa_icon": "fas fa-envelope",
          "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
        }
      }
    },
    "reference_genome_options": {
      "title": "Reference genome options",
      "type": "object",
      "fa_icon": "fas fa-dna",
      "description": "Reference genome related files and options required for the workflow.",
      "properties": {
        "genome_build": {
          "type": "string",
          "description": "The genome build. Must be one of \"hg19\" or \"hg38\".",
          "enum": ["hg19", "hg38"]
        },
        "fasta": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "mimetype": "text/plain",
          "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
          "description": "Path to FASTA genome file. A matching index file (*.fai) must be present in the same directory.",
          "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
          "fa_icon": "far fa-file-code"
        }
      },
      "required": ["genome_build", "fasta"]
    },
    "reflag_options": {
      "title": "Reflag options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "reflag": {
          "type": "boolean",
          "description": "Run reflag?"
        }
      },
      "required": ["reflag"]
    },
    "hairpin_options": {
      "title": "hairpin options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "snp_database": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "description": "Path to the SNP database file required by hairpin"
        },
        "fragment_threshold": {
          "type": "integer",
          "default": 4,
          "description": "Fragment threshold use for filtering (Default: 4). Decrease in the context of low coverage or small clones. Lowering will result in the inclusion of more artefacts."
        }
      },
      "required": ["snp_database", "fragment_threshold"]
    },
    "cgpvaf_options": {
      "title": "cgpVAF options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "cgpVAF_normal_bam": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "description": "Path to the in silico normal BAM."
        },
        "cgpVAF_high_depth_bed": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "description": "Path to a reference BED file of high depth regions. A matching index file (*.tbi) must be present in the same directory."
        },
        "cgpVAF_sample_batch_size": {
          "type": "integer",
          "default": 5,
          "description": "The size of sample batches within donors for the cgpVAF run."
        }
      },
      "required": [
        "cgpVAF_normal_bam",
        "cgpVAF_high_depth_bed",
        "cgpVAF_sample_batch_size"
      ]
    },
    "sequoia_options": {
      "title": "Sequoia options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "sequoia_beta_binom_shared": {
          "type": "boolean",
          "default": true,
          "description": "Only run beta-binomial filter on shared mutations. If FALSE, run on all mutations, before germline / depth filtering"
        },
        "sequoia_normal_flt": {
          "type": "string",
          "description": "Name of the dummy normal to exclude from cgpVAF output"
        },
        "sequoia_snv_rho": {
          "type": "number",
          "default": 0.1,
          "description": "Rho value threshold for SNVs"
        },
        "sequoia_indel_rho": {
          "type": "number",
          "default": 0.15,
          "description": "Rho value threshold for indels"
        },
        "sequoia_min_cov": {
          "type": "integer",
          "default": 10,
          "description": "Lower threshold for mean coverage across variant site"
        },
        "sequoia_max_cov": {
          "type": "integer",
          "default": 500,
          "description": "Upper threshold for mean coverage across variant site"
        },
        "sequoia_only_snvs": {
          "type": "boolean",
          "default": true,
          "description": "If indel file is provided, only use SNVs to construct the tree (indels will still be mapped to branches)"
        },
        "sequoia_keep_ancestral": {
          "type": "boolean",
          "description": "Keep an ancestral branch in the phylogeny for mutation mapping"
        },
        "sequoia_exclude_samples": {
          "type": "string",
          "description": "Option to manually exclude certain samples from the analysis, separate with a comma"
        },
        "sequoia_cnv_samples": {
          "type": "string",
          "description": "Samples with CNVs, exclude from germline / depth-based filtering, separate with a comma"
        },
        "sequoia_vaf_absent": {
          "type": "number",
          "default": 0.1,
          "description": "VAF threshold (autosomal) below which a variant is absent"
        },
        "sequoia_vaf_present": {
          "type": "number",
          "default": 0.3,
          "description": "VAF threshold (autosomal) above which a variant is present"
        },
        "sequoia_mixmodel": {
          "type": "boolean",
          "description": "Use a binomial mixture model to filter out non-clonal samples?"
        },
        "sequoia_min_clonal_mut": {
          "type": "integer",
          "default": 35,
          "description": "If using binomial mixture model, minimum number of clonal mutations (in cluster higher than --VAF_treshold_mixmodel) needed to include sample"
        },
        "sequoia_tree_mut_pval": {
          "type": "number",
          "default": 0.01,
          "description": "Pval threshold for treemut's mutation assignment"
        },
        "sequoia_genotype_conv_prob": {
          "type": "boolean",
          "description": "Use a binomial mixture model to filter out non-clonal samples?"
        },
        "sequoia_min_pval_for_true_somatic": {
          "type": "number",
          "default": 0.05,
          "description": "Pval threshold for somatic presence if generating a probabilistic genotype matrix"
        },
        "sequoia_min_variant_reads_shared": {
          "type": "integer",
          "default": 2,
          "description": "Minimum variant reads used in generating a probabilistic genotype matrix"
        },
        "sequoia_min_vaf_shared": {
          "type": "integer",
          "default": 2,
          "description": "Minimum VAF used in generating a probabilistic genotype matrix"
        },
        "sequoia_create_multi_tree": {
          "type": "boolean",
          "default": true,
          "description": "Convert dichotomous tree from MPBoot to polytomous tree"
        },
        "sequoia_germline_cutoff": {
          "type": "integer",
          "default": -5,
          "description": "Log10 of germline qval cutoff"
        },
        "sequoia_plot_spectra": {
          "type": "boolean",
          "description": "Plot mutational spectra?"
        },
        "sequoia_max_muts_plot": {
          "type": "integer",
          "default": 5000,
          "description": "Maximum number of SNVs to plot in mutational spectra"
        },
        "sequoia_lowVAF_filter": {
          "type": "integer",
          "default": 0,
          "description": "Minimum VAF threshold to filter out subclonal variants. Disabled by default."
        },
        "sequoia_lowVAF_filter_positive_samples": {
          "type": "integer",
          "default": 0,
          "description": "Read number to apply exact binomial filter for samples with more than given number of reads. Disabled by default."
        },
        "sequoia_VAF_treshold_mixmodel": {
          "type": "number",
          "default": 0.3,
          "description": "VAF threshold for the mixture modelling step to consider a sample clonal"
        }
      }
    },
    "institutional_config_options": {
      "title": "Institutional config options",
      "type": "object",
      "fa_icon": "fas fa-university",
      "description": "Parameters used to describe centralised config profiles. These should not be edited.",
      "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
      "properties": {
        "custom_config_version": {
          "type": "string",
          "description": "Git commit id for Institutional configs.",
          "default": "master",
          "hidden": true,
          "fa_icon": "fas fa-users-cog"
        },
        "custom_config_base": {
          "type": "string",
          "description": "Base directory for Institutional configs.",
          "default": "https://raw.githubusercontent.com/nf-core/configs/master",
          "hidden": true,
          "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
          "fa_icon": "fas fa-users-cog"
        },
        "config_profile_name": {
          "type": "string",
          "description": "Institutional config name.",
          "hidden": true,
          "fa_icon": "fas fa-users-cog"
        },
        "config_profile_description": {
          "type": "string",
          "description": "Institutional config description.",
          "hidden": true,
          "fa_icon": "fas fa-users-cog"
        },
        "config_profile_contact": {
          "type": "string",
          "description": "Institutional config contact information.",
          "hidden": true,
          "fa_icon": "fas fa-users-cog"
        },
        "config_profile_url": {
          "type": "string",
          "description": "Institutional config URL link.",
          "hidden": true,
          "fa_icon": "fas fa-users-cog"
        }
      }
    },
    "max_job_request_options": {
      "title": "Max job request options",
      "type": "object",
      "fa_icon": "fab fa-acquisitions-incorporated",
      "description": "Set the top limit for requested resources for any single job.",
      "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
      "properties": {
        "max_cpus": {
          "type": "integer",
          "description": "Maximum number of CPUs that can be requested for any single job.",
          "default": 16,
          "fa_icon": "fas fa-microchip",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
        },
        "max_memory": {
          "type": "string",
          "description": "Maximum amount of memory that can be requested for any single job.",
          "default": "128.GB",
          "fa_icon": "fas fa-memory",
          "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
        },
        "max_time": {
          "type": "string",
          "description": "Maximum amount of time that can be requested for any single job.",
          "default": "240.h",
          "fa_icon": "far fa-clock",
          "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "publish_dir_mode": {
          "type": "string",
          "default": "copy",
          "description": "Method used to save pipeline results to output directory.",
          "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
          "fa_icon": "fas fa-copy",
          "enum": [
            "symlink",
            "rellink",
            "link",
            "copy",
            "copyNoFollow",
            "move"
          ],
          "hidden": true
        },
        "email_on_fail": {
          "type": "string",
          "description": "Email address for completion summary, only when pipeline fails.",
          "fa_icon": "fas fa-exclamation-triangle",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
          "hidden": true
        },
        "plaintext_email": {
          "type": "boolean",
          "description": "Send plain-text email instead of HTML.",
          "fa_icon": "fas fa-remove-format",
          "hidden": true
        },
        "hook_url": {
          "type": "string",
          "description": "Incoming hook URL for messaging service",
          "fa_icon": "fas fa-people-group",
          "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
          "hidden": true
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "default": true,
          "fa_icon": "fas fa-check-square",
          "hidden": true
        },
        "validationShowHiddenParams": {
          "type": "boolean",
          "fa_icon": "far fa-eye-slash",
          "description": "Show all params when using `--help`",
          "hidden": true,
          "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
        },
        "validationFailUnrecognisedParams": {
          "type": "boolean",
          "fa_icon": "far fa-check-circle",
          "description": "Validation of parameters fails when an unrecognised parameter is found.",
          "hidden": true,
          "help_text": "By default, when an unrecognised parameter is found, it returns a warning."
        },
        "validationLenientMode": {
          "type": "boolean",
          "fa_icon": "far fa-check-circle",
          "description": "Validation of parameters in lenient more.",
          "hidden": true,
          "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
        },
        "validationS3PathCheck": {
          "type": "boolean",
          "hidden": true
        },
        "validationSkipDuplicateCheck": {
          "type": "boolean",
          "hidden": true
        },
        "monochromeLogs": {
          "type": "boolean",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/input_output_options"
    },
    {
      "$ref": "#/$defs/reference_genome_options"
    },
    {
      "$ref": "#/$defs/reflag_options"
    },
    {
      "$ref": "#/$defs/hairpin_options"
    },
    {
      "$ref": "#/$defs/cgpvaf_options"
    },
    {
      "$ref": "#/$defs/sequoia_options"
    },
    {
      "$ref": "#/$defs/institutional_config_options"
    },
    {
      "$ref": "#/$defs/max_job_request_options"
    },
    {
      "$ref": "#/$defs/generic_options"
    }
  ]
}
